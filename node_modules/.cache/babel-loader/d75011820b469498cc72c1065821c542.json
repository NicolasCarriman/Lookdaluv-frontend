{"ast":null,"code":"import { fetchWithoutToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const registerUser = (email, username, password) => {\n  return async dispatch => {\n    const response = await fetchWithoutToken('register/', {\n      email,\n      username,\n      password\n    }, 'POST');\n    const body = await response.json();\n    console.log(body);\n    console.log(response.status);\n\n    if (response.status === 200 || response.status === 201) {\n      // set user info\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('username', body.username);\n      localStorage.setItem('email', body.email);\n      localStorage.setItem('name', body.name);\n      dispatch(register({\n        token: body.token,\n        username: body.username\n      }));\n      console.log(\"Success register\");\n    } else {\n      console.log(body.error);\n    }\n  };\n};\n\nconst register = user => ({\n  type: types.register,\n  payload: user\n});","map":{"version":3,"sources":["C:/Users/nicol/OneDrive/Documentos/GitHub/lookdaluv-frontend/src/actions/register.js"],"names":["fetchWithoutToken","types","registerUser","email","username","password","dispatch","response","body","json","console","log","status","localStorage","setItem","token","name","register","error","user","type","payload"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,kBAAlC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AACvD,SAAO,MAAOC,QAAP,IAAqB;AACxB,UAAMC,QAAQ,GAAG,MAAMP,iBAAiB,CAChB,WADgB,EAEhB;AAAEG,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,KAFgB,EAGhB,MAHgB,CAAxC;AAKA,UAAMG,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,MAArB;;AAEA,QAAIL,QAAQ,CAACK,MAAT,KAAoB,GAApB,IAA2BL,QAAQ,CAACK,MAAT,KAAoB,GAAnD,EAAuD;AAEnD;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACO,KAAnC;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCN,IAAI,CAACJ,QAAtC;AACAS,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BN,IAAI,CAACL,KAAnC;AACAU,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BN,IAAI,CAACQ,IAAlC;AAEAV,MAAAA,QAAQ,CAAEW,QAAQ,CAAC;AACfF,QAAAA,KAAK,EAAEP,IAAI,CAACO,KADG;AAEfX,QAAAA,QAAQ,EAAEI,IAAI,CAACJ;AAFA,OAAD,CAAV,CAAR;AAKAM,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,KAdD,MAcK;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACU,KAAjB;AACH;AACJ,GA5BD;AA6BH,CA9BM;;AAgCP,MAAMD,QAAQ,GAAKE,IAAF,KAAa;AAC1BC,EAAAA,IAAI,EAAEnB,KAAK,CAACgB,QADc;AAE1BI,EAAAA,OAAO,EAAEF;AAFiB,CAAb,CAAjB","sourcesContent":["import { fetchWithoutToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const registerUser = (email, username, password) => {\r\n    return async( dispatch ) => {\r\n        const response = await fetchWithoutToken(\r\n                                'register/',\r\n                                { email, username, password },\r\n                                'POST',\r\n                            );\r\n        const body = await response.json();\r\n\r\n        console.log(body);\r\n        console.log(response.status);\r\n\r\n        if (response.status === 200 || response.status === 201){\r\n\r\n            // set user info\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('username', body.username);\r\n            localStorage.setItem('email', body.email);\r\n            localStorage.setItem('name', body.name);\r\n\r\n            dispatch( register({\r\n                token: body.token,\r\n                username: body.username\r\n            }));\r\n\r\n            console.log(\"Success register\");\r\n        }else{\r\n            console.log(body.error);\r\n        }\r\n    }\r\n}\r\n\r\nconst register = ( user ) => ({\r\n    type: types.register,\r\n    payload: user\r\n})"]},"metadata":{},"sourceType":"module"}